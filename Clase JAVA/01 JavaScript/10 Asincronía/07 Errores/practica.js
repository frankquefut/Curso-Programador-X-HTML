/*
try {
    let objeto = {};
    console.log(objeto.c.a);
} catch(error) {
    console.log('Error: ');
} finally {
    console.log('finally');
}
*/

try {
    let objeto = {};
    await
} catch(error) {
    console.log('Error: ');
} finally {
    console.log('finally');
}


/*
Errores

PRO TIP üëâ No ignores los mensajes de error en 
JavaScript. Util√≠zalos a tu favor para depurar 
tu c√≥digo. Los mensajes de error normalmente te 
indican qu√© l√≠nea de tu c√≥digo est√° causando el 
problema, por lo que te proporcionan una pista 
realmente √∫til de d√≥nde arreglar las cosas.


RETO ‚Ñπ
Crea una funci√≥n que divida dos n√∫meros, pero 
maneja la excepci√≥n de divisi√≥n entre cero usando 
try/catch. Imprime el error en el formato 
'Error: error'.


function divide(a, b) {
  try {
    return a / b;
  } catch (error) {
    console.log('Error:', error);
  }
}




*/